
node ('ec2_java_maven') {
    withCredentials([file(credentialsId: '6ad0a02e-19c2-4824-bb25-3c751a383d10', variable: 'MVN_SETTINGS_XML')]) {
    
        withEnv([
            "JAVA_HOME=${tool 'oracle-jdk-8'}",
            "PATH+MAVEN=${tool 'maven-3.3.9'}/bin:${env.JAVA_HOME}/bin",
            "MVN_SETTINGS_XML=${env.MVN_SETTINGS_XML}",
            
            // Jira release ticket for commit messaging.
            "RELEASE_TICKET=${env.RELEASE_TICKET}",
            
            // Versioning Info for both KFS and Rice, i.e. 52 for release 52.
            "RELEASE_VERSION=${env.RELEASE_VERSION}",

             // Rice release version info, prefix i.e 2.6.0-ua-release
            "RELEASE_PREFIX_RICE=${env.RELEASE_PREFIX_RICE}",
            "RICE_RELEASE_VERSION=${env.RELEASE_PREFIX_RICE}${env.RELEASE_VERSION}",           

            // KFS release version info , prefix i.e 7.20170511-ua-release
            "RELEASE_PREFIX_KFS=${env.RELEASE_PREFIX_KFS}",
            "KFS_RELEASE_VERSION=${env.RELEASE_PREFIX_KFS}${env.RELEASE_VERSION}",

            // TODO: REMOVE RCF BEING USED FOR DEBUG/TESTING
            // Source Control Info  
            // Rice
            "RICE_REPO_URL=https://github.com/ua-eas/ksd-kc5.2.1-rice",
            "RICE_DEV_BRANCH=rcf-rice-2.6-ua-development",
            "RICE_MASTER_BRANCH=rcf-rice-2.6-ua-master",
            "RICE_RELEASE_BRANCH=RCF-release",

            // KFS
            "KFS_REPO_URL=https://github.com/ua-eas/financials.git",
            "KFS_DEV_BRANCH=rcf-ua-development",
            "KFS_MASTER_BRANCH=-rcf-ua-master",
            "KFS_RELEASE_BRANCH=RCF-${env.KFS_RELEASE_VERSION}"
            ]) 
            {
                // Print out variables.
                stage ('Info')
                {
                    // RCF Adding INFO messages.
                    echo "DBG: JAVA_HOME: $JAVA_HOME"
                    echo "DBG: PATH+MAVEN: $PATH+MAVEN"
                    echo "DBG: MVN_SETTINGS_XML: $MVN_SETTINGS_XML"
                    echo "DBG: RELEASE_VERSION: $RELEASE_VERSION\nDBG: RELEASE_TICKET: $RELEASE_TICKET\nDBG: RELEASE_PREFIX_RICE: $RELEASE_PREFIX_RICE\nDBG: RELEASE_PREFIX_KFS: $RELEASE_PREFIX_KFS"
                    //echo "DBG: RELEASE_TICKET: $RELEASE_TICKET"
                    //echo "DBG: RELEASE_PREFIX_RICE: $RELEASE_PREFIX_RICE"
                    //echo "DBG: RELEASE_PREFIX_KFS: $RELEASE_PREFIX_KFS"
                    echo "DBG: RICE_RELEASE_VERSION: $RICE_RELEASE_VERSION"
                    echo "DBG: RICE_RELEASE_BRANCH: $RICE_RELEASE_BRANCH"
                    echo "DBG: KFS_RELEASE_VERSION: $KFS_RELEASE_VERSION"
                    echo "DBG: KFS_REPO_URL: $KFS_REPO_URL"
                    echo "DBG: KFS_MASTER_BRANCH: $KFS_MASTER_BRANCH"
                    echo "DBG: KFS_DEV_BRANCH: $KFS_DEV_BRANCH"
                    echo "DBG: RICE_REPO_URL: $RICE_REPO_URL"
                    echo "DBG: RICE_DEV_BRANCH: $RICE_DEV_BRANCH"
                    echo "DBG: RICE_MASTER_BRANCH: $RICE_MASTER_BRANCH"
                }

                stage ('Create Rice Release Branch')
                {
                    withCredentials([usernamePassword(credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) 
                    {
                        cleanWs()                      
                        echo "Checkout repo: " + env.RICE_REPO_URL
                        echo "Checkout Rice branch: " + env.RICE_DEV_BRANCH
                        echo "Will be using RICE_RELEASE_VERSION: " + env.RICE_RELEASE_VERSION
                        checkout([$class: 'GitSCM', branches: [[name: "*/$RICE_DEV_BRANCH"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', url: env.RICE_REPO_URL]]])
                        sh "git config user.name $GIT_USERNAME"
                        sh 'git config user.email katt-toolsadm@.list.arizona.edu'
                        sh 'git config --local credential.helper "!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p"'
                        // Create new release branch and update POM's.
                        try {
                            sh "git checkout -b $RICE_RELEASE_BRANCH"
                        }
                        catch (Exception e) {
                            echo "EXCP:CAUGHT: trying to checkout RCF-$RICE_RELEASE_VERSION"
                            echo "EXC: $e"
                        
                            // Ask user if we continue with release.  Continue or exit.
                            userInput = input(
                                id: 'userInput',    
                                message: 'Continue with Release?',    
                                parameters: [
                                    [$class:'ChoiceParameterDefinition', 
                                    choices: "YES\nNO",
                                    name: 'Continue']
                                ]  
                            )
                            if (userInput == "YES") {
                                echo "You chose YES"
                            } else if (userInput == "NO"){
                                echo "You chose NO"
                                throw e
                            } 
                        }
                        // This truncates the '-SNAPSHOT' version from develop
                        sh 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion="$RICE_RELEASE_VERSION"'
                        sh 'git add .'
                        sh 'git commit -m "RCF-$RELEASE_TICKET-JenkinsRelease: Setting pom release version: $RICE_RELEASE_VERSION"'
                        sh 'git status'
                        // sh "git push --set-upstream origin RCF-$RICE_RELEASE_VERSION"
                    }
                }
                stage ('Bump Rice Dev Branch')
                {        
                    withCredentials([usernamePassword(credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) 
                    {
                        // Bump rice development branch version for next release.
                        sh 'git branch'
                        sh "git checkout $RICE_DEV_BRANCH"
                        sh 'git branch'
                        def Integer_Value = env.RELEASE_VERSION.toInteger()
                        ++Integer_Value
                        env.NEXT_DEV_VERSION="${env.RELEASE_PREFIX_RICE}$Integer_Value" + "-SNAPSHOT"
                        echo"NEXT_DEV_VERSION: $NEXT_DEV_VERSION"
                        
                        
                        
                        /*
                        // Verify with user $NEXT_DEV_VERSION before proceeding
                        def ReleaseInfo = input message: 'Verify Next Development Version',
                            parameters: 
                                [
                                    string(
                                        defaultValue: env.NEXT_DEV_VERSION,
                                        description: ' ',
                                        name: 'NEXT_VERSION')
                                ],
                            submitterParameter: 'approver'
                        env.NEXT_DEV_VERSION=ReleaseInfo['NEXT_VERSION']
                        //echo "NEXT_VERSION = " + ReleaseInfo['NEXT_VERSION']
                        echo "NEXT_DEV_VERSION= " + env.NEXT_DEV_VERSION
                        echo "Answered by " + ReleaseInfo['approver']
                        // End Verify
                        */


                        sh 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion="$NEXT_DEV_VERSION"'
                        sh 'git diff'
                        sh 'git add .'
                        sh 'git status'
                        sh 'git commit -m "RCF-$RELEASE_TICKET-JenkinsRelease: Setting pom developer version: $NEXT_DEV_VERSION"'
                        sh 'git status'
                        // STILL REQUIRES TESTING
                        // END sh 'git push'

                    }
                }
                stage ('Update Rice Dependency')
                {        
                    withCredentials([usernamePassword(credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) 
                    {
                        // Update the version of the Rice dependency in the KFS dev project to be the new release version.
                        // push to publish
                        cleanWs()
                        echo "Checkout repo: " + env.KFS_REPO_URL
                        echo "Checkout KFS Branch: " + env.KFS_DEV_BRANCH
                        checkout([$class: 'GitSCM', branches: [[name: env.KFS_DEV_BRANCH]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', url: env.KFS_REPO_URL]]])
                        sh 'git branch'
                        sh "git config user.name $GIT_USERNAME"
                        sh 'git config user.email katt-toolsadm@.list.arizona.edu'
                        sh 'git config --local credential.helper "!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p"'
                        // This will work as long as we use newer versions-maven-plugin v2.5
                        sh 'mvn versions:set-property -Dproperty=rice.version  -DnewVersion="$RICE_RELEASE_VERSION"'
                        sh 'git diff'
                        echo ""
                        echo ""
                        echo "EXAMINE DIFF OUTPUT FROM GIT!!!"
                        echo ""

                        
                        // Verify with user the rice dependency version: $RICE_RELEASE_VERSION
                        def DepInfo = input message: 'Verify Rice Dependency Version does not include -SNAPSHOT',
                            parameters: 
                                [
                                    string(
                                        defaultValue: env.RICE_RELEASE_VERSION,
                                        description: ' ',
                                        name: 'DEP_VERSION')
                                ],
                            submitterParameter: 'approver'
                        env.RICE_RELEASE_VERSION=DepInfo['DEP_VERSION']
                        echo "RICE_RELEASE_VERSION= " + env.RICE_RELEASE_VERSION
                        echo "Answered by " + DepInfo['approver']
                        // End Verify
                        

                        sh 'git add .'
                        sh 'git status'
                        sh 'git commit -m "RCFJenkins: Updating version of rice dependency to be: $RICE_RELEASE_VERSION"'
                        sh 'git status'
                        // sh "git push --set-upstream origin RCF-$KFS_DEV_BRANCH"
                        // sh 'git status'

                                                

                    }
                }
                stage ('Create KFS Release Branch')
                {        
                    withCredentials([usernamePassword(credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) 
                    {
                        cleanWs()                      
                        echo "Checkout repo: " + env.KFS_REPO_URL
                        echo "Checkout KFS branch: " + env.KFS_DEV_BRANCH
                        echo "Will be using KFS_RELEASE_VERSION: " + env.KFS_RELEASE_VERSION
                        checkout([$class: 'GitSCM', branches: [[name: "*/$KFS_DEV_BRANCH"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', url: env.KFS_REPO_URL]]])
                        sh "git config user.name $GIT_USERNAME"
                        sh 'git config user.email katt-toolsadm@.list.arizona.edu'
                        sh 'git config --local credential.helper "!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p"'
                        // Create new release branch and update POM's.
                        try {
                            sh "git checkout -b $KFS_RELEASE_BRANCH"
                        }
                        catch (Exception e) {
                            echo "EXCP:CAUGHT: trying to checkout RCF-$KFS_RELEASE_VERSION"
                            echo "EXC: $e"
                        
                            // Ask user if we continue with release.  Continue or exit.
                            userInput = input(
                                id: 'userInput',    
                                message: 'Continue with Release?',    
                                parameters: [
                                    [$class:'ChoiceParameterDefinition', 
                                    choices: "YES\nNO",
                                    name: 'Continue']
                                ]  
                            )
                            if (userInput == "YES") {
                                echo "You chose YES"
                            } else if (userInput == "NO"){
                                echo "You chose NO"
                                throw e
                            } 
                        }
                        // This truncates the '-SNAPSHOT' version from develop
                        sh 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion="$KFS_RELEASE_VERSION"'
                        sh 'git add .'
                        sh 'git commit -m "RCF-$RELEASE_TICKET-JenkinsRelease: Setting pom release version: $KFS_RELEASE_VERSION"'
                        sh 'git status'
                        // sh "git push --set-upstream origin RCF-$RICE_RELEASE_VERSION"
                    }
                }
                stage ('Bump KFS Dev Branch')
                {        
                    withCredentials([usernamePassword(credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) 
                    {
                        // Bump KFS development branch version for next release.
                        sh 'git branch'
                        sh "git checkout $KFS_DEV_BRANCH"
                        sh 'git branch'
                        def Integer_Value = env.RELEASE_VERSION.toInteger()
                        ++Integer_Value
                        env.NEXT_DEV_VERSION="${env.RELEASE_PREFIX_KFS}$Integer_Value" + "-SNAPSHOT"
                        echo"NEXT_DEV_VERSION: $NEXT_DEV_VERSION"
                        
                        
                        
                        /*
                        // Verify with user $NEXT_DEV_VERSION before proceeding
                        def ReleaseInfo = input message: 'Verify Next Development Version',
                            parameters: 
                                [
                                    string(
                                        defaultValue: env.NEXT_DEV_VERSION,
                                        description: ' ',
                                        name: 'NEXT_VERSION')
                                ],
                            submitterParameter: 'approver'
                        env.NEXT_DEV_VERSION=ReleaseInfo['NEXT_VERSION']
                        //echo "NEXT_VERSION = " + ReleaseInfo['NEXT_VERSION']
                        echo "NEXT_DEV_VERSION= " + env.NEXT_DEV_VERSION
                        echo "Answered by " + ReleaseInfo['approver']
                        // End Verify
                        */


                        sh 'mvn versions:set -DgenerateBackupPoms=false -DnewVersion="$NEXT_DEV_VERSION"'
                        sh 'git diff'
                        sh 'git add .'
                        sh 'git status'
                        sh 'git commit -m "RCF-$RELEASE_TICKET-JenkinsRelease: Setting pom developer version: $NEXT_DEV_VERSION"'
                        sh 'git status'
                        // STILL REQUIRES TESTING
                        // END sh 'git push'

                    }
                }
                stage ('Merge Rice Release Finish')
                {
                    // Merge Rel branch to Master
                    //cleanWs()
                    //checkout([$class: 'GitSCM', branches: [[name: "*/$RICE_RELEASE_BRANCH"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'feb1872d-77aa-4ec0-be3f-c7d7d629f50e', url: env.RICE_REPO_URL]]])  
                    //sh "git pull"  
                    //sh "git checkout $RICE_MASTER_BRANCH"
                    //sh "git pull"
                    //sh "git merge $RICE_RELEASE_BRANCH"
                    //sh "git diff"
                    //sh "git add ."
                    //sh 'git commit -m "RCF-Jenkins: Merging to master release: $RICE_RELEASE_VERSION"'
                    // sh "git push"


                    // Tag Master post merge


                     // Merge Rel branch to Develop



                }

                stage ('Build Rice')
                {   
                    echo "Building Rice ..."
                    // NOTE:  Parameters here will be used for the job as expected.
                    //build job: 'Rene - KFS 7 - Release Build - Rice', parameters: [string(name: 'RELEASE_VERSION', value: env.RELEASE_VERSION), string(name: 'RICE_APP_VERSION', value: env.RICE_RELEASE_VERSION)]

                }
                stage ('Build KFS')
                {
                    echo "Building KFS ..."


                }
            }        
    }
}
